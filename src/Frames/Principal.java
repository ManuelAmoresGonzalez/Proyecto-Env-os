/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Classes.City;
import Classes.Orders;
import Classes.Road;
import Classes.User;
import Logic.*;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


public class Principal extends javax.swing.JFrame {
    
    
    methodsCity Cit= methodsCity.getInstance();
    methodsOrders Ord= methodsOrders.getInstance();
    HashMethods has= HashMethods.getInstance();
    DefaultListModel<String> listModel = new DefaultListModel<>();
    DefaultListModel<String> listModel1 = new DefaultListModel<>();
     DefaultListModel<String> listModel2 = new DefaultListModel<>();
    
    public boolean exist= false;
    public String routC="";
    public int minRC=0; 
    public float time = 0;
    public static ArrayList<Integer> values = new ArrayList<>();
    
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton10 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton7 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        jButton10.setText("jButton10");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));

        jButton1.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton1.setText("Ciudades");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton2.setText("Rutas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton3.setText("Usuarios");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Ver Pedidos");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton5.setText("Ver Amplitud");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setText("Ver Usuarios");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jList1.setBackground(new java.awt.Color(204, 204, 204));
        jList1.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jScrollPane1.setViewportView(jList1);

        jList2.setBackground(new java.awt.Color(204, 204, 204));
        jList2.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jScrollPane2.setViewportView(jList2);

        jButton7.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton7.setText("Pedidos");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jList3.setBackground(new java.awt.Color(204, 204, 204));
        jList3.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jScrollPane3.setViewportView(jList3);

        jButton8.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setText("Ver Profundidad");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setText("Ruta Corta");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(204, 204, 204));
        jTextField1.setFont(new java.awt.Font("Georgia", 3, 15)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Georgia", 3, 15)); // NOI18N
        jLabel1.setText("Inserte el ID del Pedido");

        jButton11.setFont(new java.awt.Font("Georgia", 3, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 0, 0));
        jButton11.setText("Ruta Corta Total");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTextField2.setBackground(new java.awt.Color(204, 204, 204));
        jTextField2.setFont(new java.awt.Font("Georgia", 3, 15)); // NOI18N
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 3, 15)); // NOI18N
        jLabel2.setText("Inserte la ciudad");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Routescreate cR = new Routescreate ();
                cR.setVisible(true);
                dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Citycreate cR = new Citycreate ();
        cR.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        UserCreate cR = new UserCreate ();
                cR.setVisible(true);
                dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        listModel1.clear();
        printOrder(Ord.root);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        printCityAmplitud();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        chooseLicense();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Orderscreate cR = new Orderscreate ();
                cR.setVisible(true);
                dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        marksClean();
        listModel.clear();
        if(!jTextField2.getText().isEmpty()){
            
            City val= Cit.searchCity(jTextField2.getText());
            if(val!=null){
                
                if(val.rutRoad!=null){
                    printCityProfunditi(val);
                }else{
                    JOptionPane.showMessageDialog(null, "La ciudad no tiene uniones  ");
                }
            }else{
                JOptionPane.showMessageDialog(null, "La ciudad no existe ");
            }
            
        
        }else{
            JOptionPane.showMessageDialog(null, "Debe de ingresar una ciudad ");
        }
        
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        exist= false;
        routC="";
        minRC=0; 
        time = 0;        
        marksClean();
        listModel1.clear();
        if(jTextField1.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Se debe de ingresar el id del pedido ");
        }else{
            int id= Integer.parseInt(jTextField1.getText());
            Orders root= Ord.root;
            Orders val= Ord.searchOrder(root, id);
            if(val!=null){                
                
                    String or= val.originOrder;
                    String dest= val.destinitiOrder;
                    City aux= Cit.iniCity;
                    Road auxR= aux.rutRoad;                
                    shortCutDistance(Cit.searchCity(or), Cit.searchCity(dest), "", 0, auxR, 0, val);
                    if (exist){
                    listModel1.addElement("La ruta corta en distancia es de : " + minRC +" Km");
                    listModel1.addElement("Por: " + routC);           
                    listModel1.addElement("El tiempo es de "+ time +" horas");
                    clean();
                    }else{
                        listModel1.addElement("No existen rutas para ese pedido!!!");
                        marksClean();
                        exist = false; 
                    }
            exist= false;
            routC="";
            minRC=0; 
            time = 0;        
            marksClean();
            shortCutTime(Cit.searchCity(or), Cit.searchCity(dest), "", 0, auxR, 1, val);
                    if (exist){                        
                    listModel1.addElement("La ruta corta en tiempo es de : " + time +" horas");
                    listModel1.addElement("Por: " + routC);                        
                    
                    listModel1.addElement("Y es de "+minRC+" km");
                    clean();
                    }else{
                        
                        marksClean();
                        exist = false; 
                    }       
            
                    
                
                                       
            }else{
                JOptionPane.showMessageDialog(null, "No se encuentra el envio indicado ");
            }   
        }          
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        char validate= evt.getKeyChar();
        if(Character.isLetter(validate)){
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "El id son numeros ");
        }        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        listModel1.clear();
        routeTotal(Ord.root);
        recOrders();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
public void printCityAmplitud(){
    listModel.clear();
    City auxI= Cit.iniCity;
    City auxF= Cit.finCity;
    if(auxI==null){
        listModel.addElement("No existen rutas");
        
    }else{
        while(auxI!=null){
            listModel.addElement(auxI.nameCity);
            Road rut= auxI.rutRoad;
            if(rut==null){
                listModel.addElement("  No tiene caminos");
                listModel.addElement("\n");
                    listModel.addElement("\n");
            }else{           
                while(rut!=null){

                    listModel.addElement("  Tiene un camino a "+ rut.destination.nameCity);
                    listModel.addElement("  La ruta es para: "+ rut.typeRoad);
                    listModel.addElement("\n");
                    listModel.addElement("\n");
                    
                    rut=rut.sigR;
                }                
            }
            auxI=auxI.sigC;
            }
        jList1.setModel(listModel);
        }    
    }


public void printOrder(Orders aux){
        
    if (aux == null) {
        return;
    }
    printOrder(aux.left);
    listModel1.addElement("El numero de id es el: "+ aux.idOrder);
    listModel1.addElement("El peso es de: "+ aux.weightOrder+" Kg");
    listModel1.addElement("Se dirige a "+ aux.destinitiOrder);
    listModel1.addElement("Viene de "+ aux.originOrder);
    listModel1.addElement("Lo transporta "+ aux.idUser);
    listModel1.addElement("\n");
    listModel1.addElement("\n");
    printOrder(aux.rigth);   
    jList2.setModel(listModel1);
    }


public void routeTotal(Orders aux){
        
    if (aux == null) {
        return;
    }
    routeTotal(aux.left);
    values.add(aux.idOrder);
    routeTotal(aux.rigth);
    
    }

public void recOrders(){
    for (Integer valu : values) {
        exist= false;
        routC="";
        minRC=0; 
        time = 0;        
        marksClean();
        
        Orders val= Ord.searchOrder(Ord.root, valu);
        String or= val.originOrder;
        String dest= val.destinitiOrder;
        City aux= Cit.iniCity;
        Road auxR= aux.rutRoad;                
        
        if(val!=null){
            shortCutDistance(Cit.searchCity(or), Cit.searchCity(dest), "", 0, auxR, 0, val);
            
            if (exist){
                listModel1.addElement("La ruta corta es de : " + minRC +" Km");
                listModel1.addElement("Por: " + routC);  
                
                listModel1.addElement("El tiempo es de "+ time+" horas");
                
                clean();
            }else{
                
                marksClean();
                exist = false; 
            }
            
            exist= false;
            routC="";
            minRC=0; 
            time = 0;        
            marksClean();
            shortCutTime(Cit.searchCity(or), Cit.searchCity(dest), "", 0, auxR, 1, val);
                if (exist){                        
                listModel1.addElement("La ruta corta en tiempo es de : " + time +" horas");
                listModel1.addElement("Por: " + routC);                        
                    
                listModel1.addElement("Y es de "+minRC+" km");
                listModel1.addElement("***************************");
                listModel1.addElement(" "); 
                listModel1.addElement(" ");
                clean();
                }else{         
                    listModel1.addElement("No existen rutas para ese pedido!!!");
                    listModel1.addElement("***************************");
                    listModel1.addElement(" "); 
                    listModel1.addElement(" ");
                    marksClean();
                    exist = false; 
                }       
            
            
            
        }    
    }
}

public void printCityProfunditi(City Ini){
    
    if ((Ini == null)||(Ini.brand == true)){
        return;
    }    
        Ini.brand = true;
        Road aux = Ini.rutRoad;
        while (aux != null){
            listModel.addElement(Ini.nameCity);
            listModel.addElement("  Tiene un camino a "+ aux.destination.nameCity);
            listModel.addElement("  La ruta es para: "+ aux.typeRoad);
            listModel.addElement("\n");
            listModel.addElement("\n");
          
            printCityProfunditi(aux.destination);
            aux = aux.sigR;
        }    
    jList1.setModel(listModel);    
    }


public void shortCutDistance(City origin, City destininiti, String rut, int dist, Road calle, float value, Orders val){

        if ((origin == null) || (origin.brand == true) || ((val.weightOrder>10000) && (calle.typeRoad.equals("Carga Liviana")))){
            return;
        } 
        
        if (origin == destininiti){  


            if ((routC.equals("")) || (minRC > dist) ) {
                routC = rut + " - "+ destininiti.nameCity;
                minRC = dist;
                time= value;
            }  
            exist=true;
            return;
        }
        origin.brand = true;
        Road a = origin.rutRoad;
        
        while (a != null) {
            shortCutDistance(a.destination, destininiti, rut +" - "+ origin.nameCity, dist + a.roadDistance, a, value+ a.roadDistance*60/a.maxSpeed, val);
            a = a.sigR;
        }
        
        origin.brand = false;
        jList2.setModel(listModel1);        
    }

public void shortCutTime(City origin, City destininiti, String rut, int dist, Road calle, float value, Orders val){

        if ((origin == null) || (origin.brand == true) || ((val.weightOrder>10000) && (calle.typeRoad.equals("Carga Liviana")))){
            return;
        } 
        
        if (origin == destininiti){  


            if ((routC.equals("")) || (time > value) ) {
                routC = rut + " - "+ destininiti.nameCity;
                minRC = dist;
                time+= value;
            }  
            exist=true;
            return;
        }
        origin.brand = true;
        Road a = origin.rutRoad;
        
        while (a != null) {
            shortCutTime(a.destination, destininiti, rut +" - "+ origin.nameCity, dist + a.roadDistance, a, value+ a.roadDistance/a.maxSpeed, val);
            a = a.sigR;
        }
        
        origin.brand = false;
        jList2.setModel(listModel1);        
    }

 
    public void marksClean(){

        City Change = Cit.iniCity;
        while (Change != null) {
            Change.brand = false;

            Change = Change.sigC;
        }
        exist = false;
    }
    
     public void chooseLicense() {
        listModel2.clear();
        for (User table : this.has.table) {
            for (User aux = table; aux != null; aux = aux.Next()) {
                listModel2.addElement(" Nombre: " + aux.getName());
                listModel2.addElement(" Cedula: " + aux.getId());
                listModel2.addElement(" Licencia: " + aux.getLicense());
                listModel2.addElement("************************************");
                listModel2.addElement("************************************");
                listModel2.addElement(" ");
                listModel2.addElement(" ");
            }
            
        }
    jList3.setModel(listModel2);
    }
     
    public void clean(){
        
        marksClean();
        exist = false; 
    }
}
